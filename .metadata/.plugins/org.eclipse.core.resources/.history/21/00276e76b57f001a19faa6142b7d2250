/**
 *
 */
package rs.smsif.compteur.model;

/**
 * @author neo
 *
 */
public class ParamRs {

	private String version;
	private String medro;
	private String paramRs;
	private int compteurTot;
	private int compteurBar;
	private int compteurBarN;
	private int compteurEvo;

	/**
	 * Constructeur par défaut
	 */
	public ParamRs() {
		super();
	}

	/**
	 * @param version
	 *            La version LOUVOIS à laquelle le paramètre appartient
	 * @param medro
	 *            La medrofim qui donne le DSE d'appartenance du paramètre
	 * @param paramRs
	 *            Le nom du paramètre
	 * @param compteurTot
	 *            Compteur pour comptabiliser le nombre de fois où apparait le
	 *            paramètre dans la medro
	 * @param compteurBar
	 *            compteur pour comptabiliser le nombre de fois où param est
	 *            barré noir
	 * @param compteurBarN
	 *            compteur pour comptabiliser le nombre de fois où param est
	 *            barré noir et barré
	 * @param compteurEvo
	 *            Compteur pour comptabiliser le nombre de fois où param est
	 *            d'une couleur différente de noir donc en évolution
	 */
	public ParamRs(String version, String medro, String paramRs, int compteurTot, int compteurBar, int compteurBarN,
			int compteurEvo) {
		super();
		this.version = version;
		this.medro = medro;
		this.paramRs = paramRs;
		this.compteurTot = compteurTot;
		this.compteurBar = compteurBar;
		this.compteurBarN = compteurBarN;
		this.compteurEvo = compteurEvo;
	}

	/**
	 * @return the version
	 */
	public String getVersion() {
		return version;
	}

	/**
	 * @param version
	 *            the version to set
	 */
	public void setVersion(String version) {
		this.version = version;
	}

	/**
	 * @return the medro
	 */
	public String getMedro() {
		return medro;
	}

	/**
	 * @param medro
	 *            the medro to set
	 */
	public void setMedro(String medro) {
		this.medro = medro;
	}

	/**
	 * @return the paramRs
	 */
	public String getParamRs() {
		return paramRs;
	}

	/**
	 * @param paramRs
	 *            the paramRs to set
	 */
	public void setParamRs(String paramRs) {
		this.paramRs = paramRs;
	}

	/**
	 * @return the compteurTot
	 */
	public int getCompteurTot() {
		return compteurTot;
	}

	/**
	 * @param compteurTot
	 *            the compteurTot to set
	 */
	public void setCompteurTot(int compteurTot) {
		this.compteurTot = compteurTot;
	}

	/**
	 * @return the compteurBar
	 */
	public int getCompteurBar() {
		return compteurBar;
	}

	/**
	 * @param compteurBar
	 *            the compteurBar to set
	 */
	public void setCompteurBar(int compteurBar) {
		this.compteurBar = compteurBar;
	}

	/**
	 * @return the compteurBarN
	 */
	public int getCompteurBarN() {
		return compteurBarN;
	}

	/**
	 * @param compteurBarN
	 *            the compteurBarN to set
	 */
	public void setCompteurBarN(int compteurBarN) {
		this.compteurBarN = compteurBarN;
	}

	/**
	 * @return the compteurEvo
	 */
	public int getCompteurEvo() {
		return compteurEvo;
	}

	/**
	 * @param compteurEvo
	 *            the compteurEvo to set
	 */
	public void setCompteurEvo(int compteurEvo) {
		this.compteurEvo = compteurEvo;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + compteurBar;
		result = prime * result + compteurBarN;
		result = prime * result + compteurEvo;
		result = prime * result + compteurTot;
		result = prime * result + ((medro == null) ? 0 : medro.hashCode());
		result = prime * result + ((paramRs == null) ? 0 : paramRs.hashCode());
		result = prime * result + ((version == null) ? 0 : version.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ParamRs other = (ParamRs) obj;
		if (compteurBar != other.compteurBar)
			return false;
		if (compteurBarN != other.compteurBarN)
			return false;
		if (compteurEvo != other.compteurEvo)
			return false;
		if (compteurTot != other.compteurTot)
			return false;
		if (medro == null) {
			if (other.medro != null)
				return false;
		} else if (!medro.equals(other.medro))
			return false;
		if (paramRs == null) {
			if (other.paramRs != null)
				return false;
		} else if (!paramRs.equals(other.paramRs))
			return false;
		if (version == null) {
			if (other.version != null)
				return false;
		} else if (!version.equals(other.version))
			return false;
		return true;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "ParamRs [version=" + version + ", medro=" + medro + ", paramRs=" + paramRs + "]";
	}





}

/**
 *
 */
package rs.smsif.compteur.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import rs.smsif.compteur.model.ParamRs;

/**
 * @author neo
 *
 */
public class ParamDAO extends DAO<ParamRs> {

	private List<ParamRs> params = new ArrayList<>();

	public ParamDAO(Connection conn) {
		super(conn);
	}

	@Override
	public int create(ParamRs obj) {
		int result = 0;
		try {

			// Création de la requête sur la PK de DX.COMPTAGE_RS
			String query = "INSERT INTO DX.COMPTEURS_PARAM ";
			query += " (VERSION,MEDRO,PARAM_RS,CPT_TOT,CPT_BAR,CPT_BARN,CPT_EVO) values";
			query += " (?,?,?,?,?,?,?)";

			/*
			 * Création de l'objet preparedStatement TYPE_SCROLL_INSENSITIVE
			 * scroll de la table avant et arriere par contre pas de
			 * modification si BDD mise à jour, CONCUR_READ_ONLY : données
			 * consultables uniquement en lecture
			 */
			PreparedStatement prepare = connect.prepareStatement(query, ResultSet.TYPE_SCROLL_INSENSITIVE,
					ResultSet.CONCUR_UPDATABLE);

			// Attibution des valeurs de la requête
			prepare.setString(1, obj.getVersion());
			prepare.setString(2, obj.getMedro());
			prepare.setString(3, obj.getRubriqueSolde());
			prepare.setInt(4, obj.getCompteurTot());
			prepare.setInt(5, obj.getCompteurBar());
			prepare.setInt(6, obj.getCompteurEvo());
			prepare.setInt(7, obj.getIndic());

			// Check requête prepare
			System.out.println(prepare.toString());

			// Execution de la requete SQL prepare
			result = prepare.executeUpdate();

			// On récupère l'objet et ses valeurs
			if (result > 0) {
				System.out.println("Objet bien ajouté en base");
			} else if (result == 0) {
				System.out.println("Objet non injecté en base");
			}
			// Fermeture de la connexion
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
	}

	@Override
	public int delete(ParamRs obj) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public boolean update(ParamRs obj) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public ParamRs find(String a1, String a2, String a3) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<ParamRs> selectAll() {
		// TODO Auto-generated method stub
		return null;
	}

}
